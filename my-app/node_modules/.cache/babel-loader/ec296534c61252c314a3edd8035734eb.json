{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbilaborwit/Desktop/curry-index/src/App.js\";\n// Modules\nimport React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport noodleheadRed from './noodlehead-red.jpg'; // import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link\n// } from \"react-router-dom\";\n// import Map from \"./Map\";\n// CSS\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction throwError(inputName) {\n  console.log(inputName, \" is required.\");\n}\n\nfunction AddCurryModal(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    id: \"bootstrap-overrides\" // {...props}\n    ,\n    show: props.show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: props.currySetter,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New Curry Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mb-1\",\n              children: \"Restaurant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"sm\",\n              name: \"restaurantName\",\n              type: \"text\",\n              placeholder: \"Name of Restaurant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mb-1\",\n              children: \"Full Address of Restaurant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              size: \"sm\",\n              name: \"restaurantAddress\",\n              type: \"text\",\n              placeholder: \"e.g. \\\"123 Thai St, Pittsburgh, PA\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container p-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-8\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"mb-0\",\n                    children: \"Curry Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sublabel\",\n                    children: \"Include \\\"curry\\\" in name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    size: \"sm\",\n                    name: \"curryType\",\n                    type: \"text\",\n                    placeholder: \"e.g. \\\"Red Curry\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-4\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"mb-0\",\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sublabel\",\n                    children: \"1=worst, 5=best\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    size: \"sm\",\n                    name: \"curryRating\",\n                    type: \"text\",\n                    placeholder: \"1-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mb-1\",\n              children: \"Taste Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"tastingNotes\",\n              placeholder: \"Taste description of curry\",\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"mb-1\",\n                children: \"Add a Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                name: \"curryPhoto\",\n                id: \"exampleFormControlFile1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          size: \"sm\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n} // Store curry list in local storage\n\n\n_c = AddCurryModal;\n\nfunction store(lizt) {\n  localStorage.setItem('curryList', JSON.stringify(lizt));\n} // Load from storage\n\n\nfunction load() {\n  let unparsedCurryList = localStorage.getItem('curryList'); //Using && to condition on unparsedCurryList else null\n\n  return unparsedCurryList && JSON.parse(unparsedCurryList);\n} // Globals\n\n\nlet loaded_curryList = load();\n\nclass Curry extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12 col-md-6 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 mt-sm-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-7 col-lg-6\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              alt: \"curry\",\n              src: noodleheadRed,\n              className: \"card-images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-5 col-lg-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"mb-0 mt-2 mt-md-0 curry-card-title\",\n              children: this.props.restaurant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.props.curry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Taste notes: \", this.props.tastingNotes, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), \"Rating: \", this.props.rating, \"/5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-btn\",\n              onClick: e => this.props.deleteItem(e, this.props.i),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //Using || for backup assignment if no curryList in storage\n      curryList: loaded_curryList || [],\n      newCurryContent: \"\",\n      modalShow: false\n    };\n\n    this.addItem = e => {\n      e.preventDefault(); // Error checker: make sure all input values are filled (except excluded inputs if any)\n\n      let excludedInputs = \"curryPhoto tastingNotes\";\n      let error = false; // Go through each input field and make sure it's not empty\n\n      for (var i = 0; i < e.target.elements.length - 2; i++) {\n        if (e.target[i].value === \"\" && !excludedInputs.includes(e.target[i].name)) {\n          throwError(e.target[i].name);\n          error = true;\n        }\n      }\n\n      if (error === true) {\n        return null;\n      }\n\n      let currCurryList = this.state.curryList;\n      let newCurry = {};\n\n      for (i = 0; i < e.target.elements.length - 2; i++) {\n        newCurry[e.target.elements[i].name] = e.target[i].value;\n      }\n\n      currCurryList.push(newCurry);\n      this.setState({\n        curryList: currCurryList\n      });\n      store(currCurryList); // close modal\n\n      this.setModalShow(false);\n    };\n\n    this.deleteItem = (event, i) => {\n      event.stopPropagation(); // Makes the delete button work\n\n      let currCurryList = this.state.curryList;\n      currCurryList.splice(i, 1);\n      this.setState({\n        curryList: currCurryList\n      });\n      store(currCurryList);\n    };\n  }\n\n  renderCurryItem(restaurant, curryType, tastingNotes, rating, i) {\n    return /*#__PURE__*/_jsxDEV(Curry, {\n      restaurant: restaurant,\n      curry: curryType,\n      tastingNotes: tastingNotes,\n      rating: rating,\n      i: i,\n      deleteItem: this.deleteItem\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  }\n\n  setModalShow(bool) {\n    this.setState({\n      modalShow: bool\n    });\n  }\n\n  render() {\n    let curriesInIndex = [];\n\n    if (this.state.curryList != null) {\n      for (let i = 0; i < this.state.curryList.length; i++) {\n        let curry = this.state.curryList[i];\n        curriesInIndex.push(this.renderCurryItem(curry.restaurantName, curry.curryType, curry.tastingNotes, curry.curryRating, i));\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bootstrap-overrides\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header pb-0 pb-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-0\",\n          children: \"Saved Curries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#add\",\n          onClick: () => this.setModalShow(true),\n          children: /*#__PURE__*/_jsxDEV(\"u\", {\n            children: \"+ Add New Curry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: curriesInIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCurryModal, {\n        show: this.state.modalShow,\n        onHide: () => this.setModalShow(false),\n        currySetter: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCurryModal\");","map":{"version":3,"sources":["/Users/gabbilaborwit/Desktop/curry-index/src/App.js"],"names":["React","Component","Modal","Form","Button","Image","noodleheadRed","throwError","inputName","console","log","AddCurryModal","props","show","currySetter","onHide","store","lizt","localStorage","setItem","JSON","stringify","load","unparsedCurryList","getItem","parse","loaded_curryList","Curry","render","restaurant","curry","tastingNotes","rating","e","deleteItem","i","App","state","curryList","newCurryContent","modalShow","addItem","preventDefault","excludedInputs","error","target","elements","length","value","includes","name","currCurryList","newCurry","push","setState","setModalShow","event","stopPropagation","splice","renderCurryItem","curryType","bool","curriesInIndex","restaurantName","curryRating"],"mappings":"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","sourcesContent":["// Modules\nimport React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport noodleheadRed from './noodlehead-red.jpg';\n\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link\n// } from \"react-router-dom\";\n// import Map from \"./Map\";\n\n// CSS\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction throwError(inputName) {\n    console.log(inputName, \" is required.\")\n}\n\nfunction AddCurryModal(props) {\n    return (\n        <Modal id=\"bootstrap-overrides\"\n            // {...props}\n            show={props.show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Form onSubmit={props.currySetter}>\n                <Modal.Body className=\"container\">\n                    <h2>New Curry Entry</h2>\n                    <div className=\"row\">\n                        <div className=\"col-8\">\n                            <Form.Label className=\"mb-1\">Restaurant</Form.Label><br />\n                            <Form.Control size=\"sm\" name=\"restaurantName\" type=\"text\" placeholder=\"Name of Restaurant\" />\n                            <br />\n\n                            <Form.Label className=\"mb-1\">Full Address of Restaurant</Form.Label>\n                            <Form.Control size=\"sm\" name=\"restaurantAddress\" type=\"text\" placeholder='e.g. \"123 Thai St, Pittsburgh, PA\"' />\n                            <br />\n\n                            <div className=\"container p-0\">\n                                <div className=\"row\">\n                                    <div className=\"col-8\">\n                                        <Form.Label className=\"mb-0\">Curry Name</Form.Label>\n                                        <br /><span className=\"sublabel\">Include \"curry\" in name</span>\n                                        <Form.Control size=\"sm\" name=\"curryType\" type=\"text\" placeholder='e.g. \"Red Curry\"' />\n                                    </div>\n                                    <div className=\"col-4\">\n                                        <Form.Label className=\"mb-0\">Rating</Form.Label>\n                                        <br /><span className=\"sublabel\">1=worst, 5=best</span>\n                                        <Form.Control size=\"sm\" name=\"curryRating\" type=\"text\" placeholder=\"1-5\" />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <br />\n                            <Form.Label className=\"mb-1\">Taste Notes</Form.Label>\n                            <Form.Control as=\"textarea\" name=\"tastingNotes\" placeholder=\"Taste description of curry\" rows={3} />\n\n                        </div>\n\n                        <div className=\"col-4\">\n                            <Form.Group>\n                                <Form.Label className=\"mb-1\">Add a Photo</Form.Label>\n                                <Form.File name=\"curryPhoto\" id=\"exampleFormControlFile1\" />\n                            </Form.Group>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={props.onHide}>Close</Button>\n                    <Button variant=\"primary\" type=\"submit\" size=\"sm\">Save</Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n\n// Store curry list in local storage\nfunction store(lizt) {\n    localStorage.setItem('curryList', JSON.stringify(lizt))\n}\n\n// Load from storage\nfunction load() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\n// Globals\nlet loaded_curryList = load();\n\nclass Curry extends React.Component {\n    render() {\n        return (\n            <div className=\"col-sm-12 col-md-6 mb-4\">\n                <div className=\"mt-4 mt-sm-auto\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-7 col-lg-6\">\n                            {/* <Image alt=\"curry\" src={require(\"./noodlehead-red.jpg\")} /> */}\n                            <Image alt=\"curry\" src={noodleheadRed} className=\"card-images\" />\n                        </div>\n                        <div className=\"col-12 col-md-5 col-lg-6\">\n                            <h2 className=\"mb-0 mt-2 mt-md-0 curry-card-title\">{this.props.restaurant}</h2>\n                            <h3>{this.props.curry}</h3>\n                            <p>\n                                Taste notes: {this.props.tastingNotes}\n                                <br />Rating: {this.props.rating}/5\n                            </p>\n\n                            <span className=\"delete-btn\" onClick={(e) => this.props.deleteItem(e, this.props.i)}>\n                                {/* <span onClick={() => deleteCurry()} className=\"delete-btn\"> */}\n                                Delete\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    state = {\n        //Using || for backup assignment if no curryList in storage\n        curryList: loaded_curryList || [],\n        newCurryContent: \"\",\n        modalShow: false\n    };\n\n    renderCurryItem(restaurant, curryType, tastingNotes, rating, i) {\n        return <Curry restaurant={restaurant} curry={curryType} tastingNotes={tastingNotes} rating={rating} i={i} key={i} deleteItem={this.deleteItem} />;\n    }\n\n    addItem = (e) => {\n        e.preventDefault();\n        // Error checker: make sure all input values are filled (except excluded inputs if any)\n        let excludedInputs = \"curryPhoto tastingNotes\";\n\n        let error = false;\n        // Go through each input field and make sure it's not empty\n        for (var i = 0; i < e.target.elements.length - 2; i++) {\n            if (e.target[i].value === \"\" && !excludedInputs.includes(e.target[i].name)) {\n                throwError(e.target[i].name);\n                error = true;\n            }\n        }\n        if (error === true) {\n            return null\n        }\n\n        let currCurryList = this.state.curryList;\n\n        let newCurry = {};\n        for (i = 0; i < e.target.elements.length - 2; i++) {\n            newCurry[e.target.elements[i].name] = e.target[i].value;\n        }\n\n        currCurryList.push(newCurry)\n        this.setState({ curryList: currCurryList });\n        store(currCurryList)\n\n        // close modal\n        this.setModalShow(false);\n    };\n\n    deleteItem = (event, i) => {\n        event.stopPropagation(); // Makes the delete button work\n        let currCurryList = this.state.curryList;\n        currCurryList.splice(i, 1);\n        this.setState({ curryList: currCurryList });\n        store(currCurryList);\n    };\n\n    setModalShow(bool) {\n        this.setState({ modalShow: bool });\n    }\n\n    render() {\n        let curriesInIndex = [];\n        if (this.state.curryList != null) {\n            for (let i = 0; i < this.state.curryList.length; i++) {\n                let curry = this.state.curryList[i];\n                curriesInIndex.push(\n                    this.renderCurryItem(\n                        curry.restaurantName,\n                        curry.curryType,\n                        curry.tastingNotes,\n                        curry.curryRating,\n                        i\n                    )\n                );\n            }\n        }\n\n        return (\n            <div id=\"bootstrap-overrides\">\n                {/* Curry Index: List of curries */ }\n                <div className=\"header pb-0 pb-md-3\">\n                    <h1 className=\"mb-0\">Saved Curries</h1>\n                    <a href=\"#add\" onClick={() => this.setModalShow(true)}>\n                        <u>+ Add New Curry</u>\n                    </a>\n                </div>\n\n                <div className=\"row\">\n                    {curriesInIndex}\n                </div>\n                <AddCurryModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                    currySetter={this.addItem}\n                />\n            </div >\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}