{"version":3,"sources":["Map.js","Nav.js","noodlehead-red.jpg","App.js","index.js"],"names":["Geocode","setApiKey","mapStyles","width","height","position","loaded_curryList","unparsedCurryList","localStorage","getItem","JSON","parse","loadCurryList","loaded_markerInfo","markersList","i","curry","fromAddress","restaurantAddress","then","response","results","geometry","location","lat","lng","push","latitude","longitude","name","restaurantName","error","console","length","loadMarkerInfo","MapContainer","props","displayMarkers","state","restaurants","map","rest","index","id","onClick","markerClicked","curryList","restInfo","document","getElementsByClassName","innerHTML","getElementById","className","google","this","zoom","style","initialCenter","class","Component","GoogleApiWrapper","apiKey","Nav","to","throwError","inputName","log","AddCurryModal","Modal","show","size","aria-labelledby","centered","Form","onSubmit","currySetter","Body","Label","Control","type","placeholder","as","rows","Group","File","Footer","Button","variant","onHide","store","lizt","setItem","stringify","load","Curry","Image","alt","src","noodleheadRed","restaurant","tastingNotes","rating","e","deleteItem","React","App","newCurryContent","modalShow","addItem","preventDefault","target","elements","value","includes","currCurryList","newCurry","setState","setModalShow","event","stopPropagation","splice","curryType","bool","curriesInIndex","renderCurryItem","curryRating","href","Routing","basename","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2bcee83.chunk.js","sourcesContent":["// HOW TO USE MAPS API: https://dev.to/jessicabetts/how-to-use-google-maps-api-and-react-js-26c2\n\n// Modules\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\n\n// CSS\nimport './Map.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nGeocode.setApiKey('AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM');\n\nconst mapStyles = {\n    width: '80%',\n    height: '60%',\n    position: 'relative'\n};\n\nfunction loadCurryList() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\nfunction loadMarkerInfo() {\n    let markersList = [];\n    for (let i = 0; i < loaded_curryList.length; i++) {\n        let curry = loaded_curryList[i];\n\n        Geocode.fromAddress(curry.restaurantAddress).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                //   console.log(\"address: \", curry.restaurantAddress, \" \", lat, lng);\n                markersList.push(\n                    { latitude: lat, longitude: lng, name: curry.restaurantName }\n                );\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n    return markersList;\n}\n\n// Globals\nlet loaded_curryList = loadCurryList();\nlet loaded_markerInfo = loadMarkerInfo();\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curryList: loaded_curryList || [],\n            restaurants: loaded_markerInfo || []\n        }\n    }\n\n    displayMarkers = () => {\n        return this.state.restaurants.map((rest, index) => {\n            return <Marker key={rest.name + \"_\" + index} id={index} position={{\n                lat: rest.latitude,\n                lng: rest.longitude\n            }}\n                onClick={() => this.markerClicked(rest)} />\n        })\n    }\n\n    markerClicked(restInfo) {\n        // Set restaurant name\n        for(var i=0; i < document.getElementsByClassName(\"rest-name\").length; i++){\n            document.getElementsByClassName(\"rest-name\")[i].innerHTML = restInfo.name;\n        }\n\n        // Set curry type\n        document.getElementById(\"curry-type\")\n    }\n\n    render() {\n        return (\n            <div id=\"bootstrap-overrides\">\n                <div id=\"selected-restaurant\">Selected restaurant: <span className=\"rest-name\"><i>None selected</i></span></div>\n\n                <div id=\"mapBox\">\n                    <Map\n                        google={this.props.google}\n                        zoom={13}\n                        style={mapStyles}\n                        initialCenter={{ lat: 40.4406, lng: -79.9959 }}\n                    >\n                        {this.displayMarkers()}\n                    </Map>\n                </div>\n                <div id=\"selected-curry\" className=\"mt-2 mt-md-2\">\n                    <h2 class=\"rest-name\"></h2>\n                    <h3 id=\"curry-type\"></h3>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM' })(MapContainer);","import React, { Component } from \"react\";\nimport './Nav.css';\nimport {\n    NavLink,\n    Link\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Nav extends Component {\n\n    render() {\n        return (\n            <nav id=\"overrides\" className=\"navbar mb-5 px-0\">\n                <Link to=\"/\" className=\"navbar-brand\">Custom Curry Index</Link>\n\n                <div className=\"navbar-nav flex-row\">\n                    <NavLink to=\"/\" className=\"nav-item nav-link px-1 mr-2\">Curry Index</NavLink>\n\n                    <NavLink to=\"/map\" className=\"nav-item nav-link px-1 mx-2\">Map</NavLink>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Nav;","export default __webpack_public_path__ + \"static/media/noodlehead-red.9cb1acaf.jpg\";","// Modules\nimport React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport noodleheadRed from './noodlehead-red.jpg';\n\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link\n// } from \"react-router-dom\";\n// import Map from \"./Map\";\n\n// CSS\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction throwError(inputName) {\n    console.log(inputName, \" is required.\")\n}\n\nfunction AddCurryModal(props) {\n    return (\n        <Modal id=\"bootstrap-overrides\"\n            // {...props}\n            show={props.show}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Form onSubmit={props.currySetter}>\n                <Modal.Body className=\"container\">\n                    <h2>New Curry Entry</h2>\n                    <div className=\"row\">\n                        <div className=\"col-8\">\n                            <Form.Label className=\"mb-1\">Restaurant</Form.Label><br />\n                            <Form.Control size=\"sm\" name=\"restaurantName\" type=\"text\" placeholder=\"Name of Restaurant\" />\n                            <br />\n\n                            <Form.Label className=\"mb-1\">Full Address of Restaurant</Form.Label>\n                            <Form.Control size=\"sm\" name=\"restaurantAddress\" type=\"text\" placeholder='e.g. \"123 Thai St, Pittsburgh, PA\"' />\n                            <br />\n\n                            <div className=\"container p-0\">\n                                <div className=\"row\">\n                                    <div className=\"col-8\">\n                                        <Form.Label className=\"mb-0\">Curry Name</Form.Label>\n                                        <br /><span className=\"sublabel\">Include \"curry\" in name</span>\n                                        <Form.Control size=\"sm\" name=\"curryType\" type=\"text\" placeholder='e.g. \"Red Curry\"' />\n                                    </div>\n                                    <div className=\"col-4\">\n                                        <Form.Label className=\"mb-0\">Rating</Form.Label>\n                                        <br /><span className=\"sublabel\">1=worst, 5=best</span>\n                                        <Form.Control size=\"sm\" name=\"curryRating\" type=\"text\" placeholder=\"1-5\" />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <br />\n                            <Form.Label className=\"mb-1\">Taste Notes</Form.Label>\n                            <Form.Control as=\"textarea\" name=\"tastingNotes\" placeholder=\"Taste description of curry\" rows={3} />\n\n                        </div>\n\n                        <div className=\"col-4\">\n                            <Form.Group>\n                                <Form.Label className=\"mb-1\">Add a Photo</Form.Label>\n                                <Form.File name=\"curryPhoto\" id=\"exampleFormControlFile1\" />\n                            </Form.Group>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={props.onHide}>Close</Button>\n                    <Button variant=\"primary\" type=\"submit\" size=\"sm\">Save</Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n\n// Store curry list in local storage\nfunction store(lizt) {\n    localStorage.setItem('curryList', JSON.stringify(lizt))\n}\n\n// Load from storage\nfunction load() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\n// Globals\nlet loaded_curryList = load();\n\nclass Curry extends React.Component {\n    render() {\n        return (\n            <div className=\"col-sm-12 col-md-6 mb-4\">\n                <div className=\"mt-4 mt-sm-auto\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-7 col-lg-6\">\n                            {/* <Image alt=\"curry\" src={require(\"./noodlehead-red.jpg\")} /> */}\n                            <Image alt=\"curry\" src={noodleheadRed} className=\"card-images\" />\n                        </div>\n                        <div className=\"col-12 col-md-5 col-lg-6\">\n                            <h2 className=\"mb-0 mt-2 mt-md-0 curry-card-title\">{this.props.restaurant}</h2>\n                            <h3>{this.props.curry}</h3>\n                            <p>\n                                Taste notes: {this.props.tastingNotes}\n                                <br />Rating: {this.props.rating}/5\n                            </p>\n\n                            <span className=\"delete-btn\" onClick={(e) => this.props.deleteItem(e, this.props.i)}>\n                                {/* <span onClick={() => deleteCurry()} className=\"delete-btn\"> */}\n                                Delete\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    state = {\n        //Using || for backup assignment if no curryList in storage\n        curryList: loaded_curryList || [],\n        newCurryContent: \"\",\n        modalShow: false\n    };\n\n    renderCurryItem(restaurant, curryType, tastingNotes, rating, i) {\n        return <Curry restaurant={restaurant} curry={curryType} tastingNotes={tastingNotes} rating={rating} i={i} key={i} deleteItem={this.deleteItem} />;\n    }\n\n    addItem = (e) => {\n        e.preventDefault();\n        // Error checker: make sure all input values are filled (except excluded inputs if any)\n        let excludedInputs = \"curryPhoto tastingNotes\";\n\n        let error = false;\n        // Go through each input field and make sure it's not empty\n        for (var i = 0; i < e.target.elements.length - 2; i++) {\n            if (e.target[i].value === \"\" && !excludedInputs.includes(e.target[i].name)) {\n                throwError(e.target[i].name);\n                error = true;\n            }\n        }\n        if (error === true) {\n            return null\n        }\n\n        let currCurryList = this.state.curryList;\n\n        let newCurry = {};\n        for (i = 0; i < e.target.elements.length - 2; i++) {\n            newCurry[e.target.elements[i].name] = e.target[i].value;\n        }\n\n        currCurryList.push(newCurry)\n        this.setState({ curryList: currCurryList });\n        store(currCurryList)\n\n        // close modal\n        this.setModalShow(false);\n    };\n\n    deleteItem = (event, i) => {\n        event.stopPropagation(); // Makes the delete button work\n        let currCurryList = this.state.curryList;\n        currCurryList.splice(i, 1);\n        this.setState({ curryList: currCurryList });\n        store(currCurryList);\n    };\n\n    setModalShow(bool) {\n        this.setState({ modalShow: bool });\n    }\n\n    render() {\n        let curriesInIndex = [];\n        if (this.state.curryList != null) {\n            for (let i = 0; i < this.state.curryList.length; i++) {\n                let curry = this.state.curryList[i];\n                curriesInIndex.push(\n                    this.renderCurryItem(\n                        curry.restaurantName,\n                        curry.curryType,\n                        curry.tastingNotes,\n                        curry.curryRating,\n                        i\n                    )\n                );\n            }\n        }\n\n        return (\n            <div id=\"bootstrap-overrides\">\n                {/* Curry Index: List of curries */ }\n                <div className=\"header pb-0 pb-md-3\">\n                    <h1 className=\"mb-0\">Saved Curries</h1>\n                    <a href=\"#add\" onClick={() => this.setModalShow(true)}>\n                        <u>+ Add New Curry</u>\n                    </a>\n                </div>\n\n                <div className=\"row\">\n                    {curriesInIndex}\n                </div>\n                <AddCurryModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                    currySetter={this.addItem}\n                />\n            </div >\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n    // BrowserRouter as Router,\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\nimport MapContainer from \"./Map\";\nimport Nav from \"./Nav\";\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Routing extends Component {\n    render() {\n        return (\n                <div className=\"container\">\n                    <HashRouter basename='/'>\n                        <Nav />\n\n                        {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <App />\n                            </Route>\n\n                            <Route path=\"/map\">\n                                <MapContainer />\n                            </Route>\n                        </Switch>\n                    </HashRouter>\n                </div>\n        )\n    }\n}\n\n// const Home = () => <div><h2>Home</h2></div>\n// const About = () => <div><h2>About</h2></div>\n\nReactDOM.render(<Routing />, document.getElementById('root'));"],"sourceRoot":""}