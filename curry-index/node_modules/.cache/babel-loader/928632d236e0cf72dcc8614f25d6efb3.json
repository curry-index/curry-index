{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbilaborwit/Desktop/curry-index/curry-index/src/Map.js\";\n// HOW TO USE MAPS API: https://dev.to/jessicabetts/how-to-use-google-maps-api-and-react-js-26c2\n// Modules\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\"; // CSS\n\nimport './Map.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nGeocode.setApiKey('AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM');\nconst mapStyles = {\n  width: '80%',\n  height: '60%',\n  position: 'relative'\n};\n\nfunction loadCurryList() {\n  let unparsedCurryList = localStorage.getItem('curryList'); //Using && to condition on unparsedCurryList else null\n\n  return unparsedCurryList && JSON.parse(unparsedCurryList);\n}\n\nfunction loadMarkerInfo() {\n  let markersList = [];\n\n  for (let i = 0; i < loaded_curryList.length; i++) {\n    let curry = loaded_curryList[i];\n    Geocode.fromAddress(curry.restaurantAddress).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location; //   console.log(\"address: \", curry.restaurantAddress, \" \", lat, lng);\n\n      markersList.push({\n        latitude: lat,\n        longitude: lng,\n        name: curry.restaurantName\n      });\n    }, error => {\n      console.error(error);\n    });\n  }\n\n  return markersList;\n} // Globals\n\n\nlet loaded_curryList = loadCurryList();\nlet loaded_markerInfo = loadMarkerInfo();\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.restaurants.map((rest, index) => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          id: index,\n          position: {\n            lat: rest.latitude,\n            lng: rest.longitude\n          },\n          onClick: () => this.markerClicked(rest)\n        }, rest.name + \"_\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.state = {\n      curryList: loaded_curryList || [],\n      restaurants: loaded_markerInfo || []\n    };\n  }\n\n  markerClicked(restInfo) {\n    // Set restaurant name\n    for (var i = 0; i < document.getElementsByClassName(\"rest-name\").length; i++) {\n      document.getElementsByClassName(\"rest-name\")[i].innerHTML = restInfo.name;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bootstrap-overrides\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"selected-restaurant\",\n        children: [\"Selected restaurant: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rest-name\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"None selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mapBox\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: this.props.google,\n          zoom: 13,\n          style: mapStyles,\n          initialCenter: {\n            lat: 40.4406,\n            lng: -79.9959\n          },\n          children: this.displayMarkers()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"selected-curry\",\n        className: \"mt-2 mt-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"rest-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"curry-type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM'\n})(MapContainer);","map":{"version":3,"sources":["/Users/gabbilaborwit/Desktop/curry-index/curry-index/src/Map.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","Geocode","setApiKey","mapStyles","width","height","position","loadCurryList","unparsedCurryList","localStorage","getItem","JSON","parse","loadMarkerInfo","markersList","i","loaded_curryList","length","curry","fromAddress","restaurantAddress","then","response","lat","lng","results","geometry","location","push","latitude","longitude","name","restaurantName","error","console","loaded_markerInfo","MapContainer","constructor","props","displayMarkers","state","restaurants","map","rest","index","markerClicked","curryList","restInfo","document","getElementsByClassName","innerHTML","render","google","apiKey"],"mappings":"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","sourcesContent":["// HOW TO USE MAPS API: https://dev.to/jessicabetts/how-to-use-google-maps-api-and-react-js-26c2\n\n// Modules\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\n\n// CSS\nimport './Map.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nGeocode.setApiKey('AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM');\n\nconst mapStyles = {\n    width: '80%',\n    height: '60%',\n    position: 'relative'\n};\n\nfunction loadCurryList() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\nfunction loadMarkerInfo() {\n    let markersList = [];\n    for (let i = 0; i < loaded_curryList.length; i++) {\n        let curry = loaded_curryList[i];\n\n        Geocode.fromAddress(curry.restaurantAddress).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                //   console.log(\"address: \", curry.restaurantAddress, \" \", lat, lng);\n                markersList.push(\n                    { latitude: lat, longitude: lng, name: curry.restaurantName }\n                );\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n    return markersList;\n}\n\n// Globals\nlet loaded_curryList = loadCurryList();\nlet loaded_markerInfo = loadMarkerInfo();\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curryList: loaded_curryList || [],\n            restaurants: loaded_markerInfo || []\n        }\n    }\n\n    displayMarkers = () => {\n        return this.state.restaurants.map((rest, index) => {\n            return <Marker key={rest.name + \"_\" + index} id={index} position={{\n                lat: rest.latitude,\n                lng: rest.longitude\n            }}\n                onClick={() => this.markerClicked(rest)} />\n        })\n    }\n\n    markerClicked(restInfo) {\n        // Set restaurant name\n        for(var i=0; i < document.getElementsByClassName(\"rest-name\").length; i++){\n            document.getElementsByClassName(\"rest-name\")[i].innerHTML = restInfo.name;\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"bootstrap-overrides\">\n                <div id=\"selected-restaurant\">Selected restaurant: <span className=\"rest-name\"><i>None selected</i></span></div>\n\n                <div id=\"mapBox\">\n                    <Map\n                        google={this.props.google}\n                        zoom={13}\n                        style={mapStyles}\n                        initialCenter={{ lat: 40.4406, lng: -79.9959 }}\n                    >\n                        {this.displayMarkers()}\n                    </Map>\n                </div>\n                <div id=\"selected-curry\" className=\"mt-2 mt-md-2\">\n                    <h2 class=\"rest-name\"></h2>\n                    <h3 id=\"curry-type\"></h3>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM' })(MapContainer);"]},"metadata":{},"sourceType":"module"}