{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbilaborwit/Desktop/curry-index/curry-index/src/Map.js\";\n// HOW TO USE MAPS API: https://dev.to/jessicabetts/how-to-use-google-maps-api-and-react-js-26c2\n// Modules\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport Image from 'react-bootstrap/Image';\nimport curryBowl from \"./currybowllg.svg\";\nimport AddCurryModal from './AddCurryModal'; // CSS\n\nimport './Map.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nGeocode.setApiKey('AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM');\nconst mapStyles = {\n  width: '80%',\n  height: '330px',\n  position: 'relative'\n};\n\nfunction throwError(inputName) {\n  document.getElementById(inputName + \"-label\").style = \"color: #dc3545; font-weight: 600\";\n} // Store curry list in local storage\n\n\nfunction store(lizt) {\n  localStorage.setItem('curryList', JSON.stringify(lizt));\n}\n\nfunction loadCurryList() {\n  let unparsedCurryList = localStorage.getItem('curryList'); //Using && to condition on unparsedCurryList else null\n\n  return unparsedCurryList && JSON.parse(unparsedCurryList);\n}\n\nfunction loadMarkerInfo() {\n  let markersList = [];\n\n  if (!loaded_curryList) {\n    loaded_curryList = [];\n  }\n\n  for (let i = 0; i < loaded_curryList.length; i++) {\n    let curry = loaded_curryList[i];\n    Geocode.fromAddress(curry.restaurantAddress).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location; //   console.log(\"address: \", curry.restaurantAddress, \" \", lat, lng);\n\n      markersList.push({\n        latitude: lat,\n        longitude: lng,\n        name: curry.restaurantName\n      });\n    }, error => {\n      console.error(\"No location found for restaurant \", loaded_curryList[i].restaurantName, \" at \", loaded_curryList[i].restaurantAddress, \"\\nTechnical error for this to follow (just ignore):\\n\", error);\n    });\n  }\n\n  return markersList;\n} // Globals\n\n\nlet loaded_curryList = loadCurryList();\nlet loaded_markerInfo = loadMarkerInfo();\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.restaurants.map((rest, index) => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          id: index,\n          position: {\n            lat: rest.latitude,\n            lng: rest.longitude\n          },\n          icon: {\n            url: \"http://maps.google.com/mapfiles/kml/pal2/icon41.png\"\n          },\n          onClick: () => this.markerClicked(rest, index)\n        }, rest.name + \"_\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.addItem = e => {\n      e.preventDefault(); // Error checker: make sure all input values are filled (except excluded inputs if any)\n\n      let excludedInputs = \"tastingNotes\";\n      let error = false; // Go through each input field and make sure it's not empty\n\n      for (var i = 0; i < 5; i++) {\n        if (e.target[i].value === \"\" && !excludedInputs.includes(e.target[i].name)) {\n          throwError(e.target[i].name);\n          error = true;\n        } else if (document.getElementById(e.target[i].name + \"-label\").style.color !== \"#212529\") {\n          document.getElementById(e.target[i].name + \"-label\").style.color = \"#212529\";\n          document.getElementById(e.target[i].name + \"-label\").style.fontWeight = \"400\";\n        }\n      }\n\n      if (error === true) {\n        document.getElementsByClassName(\"req\")[0].style.color = \"#dc3545\";\n        return null;\n      }\n\n      let currCurryList = this.state.curryList;\n      let newCurry = {};\n\n      for (i = 0; i < 5; i++) {\n        // If optional inputs empty, fill with \"None\"\n        if (excludedInputs.includes(e.target[i].name) && e.target[i].value === \"\") {\n          e.target[i].value = \"N/A\";\n        }\n\n        newCurry[e.target.elements[i].name] = e.target[i].value;\n      }\n\n      if (this.state.pictures.length === 0) {\n        newCurry[\"pic\"] = curryBowl;\n      } else {\n        newCurry[\"pic\"] = this.state.pictures;\n      }\n\n      currCurryList.push(newCurry);\n      this.setState({\n        curryList: currCurryList\n      });\n      store(currCurryList); // close modal\n\n      this.setModalShow(false);\n      window.location.reload();\n    };\n\n    this.state = {\n      curryList: loaded_curryList || [],\n      restaurants: loaded_markerInfo || [],\n      markerSelected: false,\n      modalShow: false,\n      pictures: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(pictureFiles, pictureDataURLs) {\n    this.setState({\n      pictures: pictureDataURLs\n    });\n  }\n\n  markerClicked(restInfo, index) {\n    this.setState({\n      markerSelected: true\n    }); // open infowindow.open(map, marker);\n\n    document.getElementById(\"instrucs\").innerHTML = \"Selected restaurant: \"; // Set restaurant name\n\n    for (var i = 0; i < document.getElementsByClassName(\"rest-name\").length; i++) {\n      document.getElementsByClassName(\"rest-name\")[i].innerHTML = restInfo.name;\n    } // Set curry type\n\n\n    document.getElementById(\"curry-img\").src = this.state.curryList[index].pic;\n    document.getElementById(\"ranking\").innerHTML = \"#\" + (index + 1);\n    document.getElementById(\"curry-type\").innerHTML = this.state.curryList[index].curryType;\n    document.getElementById(\"taste-notes\").innerHTML = this.state.curryList[index].tastingNotes;\n    document.getElementById(\"rate\").innerHTML = this.state.curryList[index].curryRating;\n  }\n\n  setModalShow(bool) {\n    // on open, reset picture stored for upload so no repeats if someone doesn't upload one\n    if (bool === true) {\n      this.setState({\n        pictures: []\n      });\n    }\n\n    this.setState({\n      modalShow: bool\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bootstrap-overrides\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"selected-restaurant\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"instrucs\",\n          children: \"Select a Pinned Thai Curry Restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rest-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 86\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"link-like-span\",\n          onClick: () => this.setModalShow(true),\n          children: \"+ Add New Curry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCurryModal, {\n        show: this.state.modalShow,\n        onHide: () => this.setModalShow(false),\n        currySetter: this.addItem,\n        onDrop: this.onDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map-box\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: this.props.google,\n          zoom: 13,\n          style: mapStyles,\n          initialCenter: {\n            lat: 40.4476,\n            lng: -79.9809\n          },\n          children: this.displayMarkers()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notice\",\n        children: \"Note: if map doesn't update or show markers and curries in index, refresh page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), this.state.markerSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"selected-curry\",\n        className: \"mt-2 mt-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          alt: \"curry\",\n          src: curryBowl,\n          id: \"curry-img\",\n          className: \"selected-curry-image left-fl mr-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-fl\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"left-fl\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"ranking\",\n              children: \"#1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"left-fl ml-1 mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"rest-name mb-0\",\n              children: \"n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"curry-type\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clear\",\n            children: [\"Taste notes: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"taste-notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), \"Rating: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this), \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM'\n})(MapContainer);","map":{"version":3,"sources":["/Users/gabbilaborwit/Desktop/curry-index/curry-index/src/Map.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","Geocode","Image","AddCurryModal","setApiKey","mapStyles","width","height","position","throwError","inputName","document","getElementById","style","store","lizt","localStorage","setItem","JSON","stringify","loadCurryList","unparsedCurryList","getItem","parse","loadMarkerInfo","markersList","loaded_curryList","i","length","curry","fromAddress","restaurantAddress","then","response","lat","lng","results","geometry","location","push","latitude","longitude","name","restaurantName","error","console","loaded_markerInfo","MapContainer","constructor","props","displayMarkers","state","restaurants","map","rest","index","url","markerClicked","addItem","e","preventDefault","excludedInputs","target","value","includes","color","fontWeight","getElementsByClassName","currCurryList","curryList","newCurry","elements","pictures","curryBowl","setState","setModalShow","window","reload","markerSelected","modalShow","onDrop","bind","pictureFiles","pictureDataURLs","restInfo","innerHTML","src","pic","curryType","tastingNotes","curryRating","bool","render","google","apiKey"],"mappings":"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","sourcesContent":["// HOW TO USE MAPS API: https://dev.to/jessicabetts/how-to-use-google-maps-api-and-react-js-26c2\n\n// Modules\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport Image from 'react-bootstrap/Image';\nimport curryBowl from './currybowllg.svg';\nimport AddCurryModal from './AddCurryModal';\n\n// CSS\nimport './Map.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nGeocode.setApiKey('AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM');\n\nconst mapStyles = {\n    width: '80%',\n    height: '330px',\n    position: 'relative'\n};\n\nfunction throwError(inputName) {\n    document.getElementById(inputName + \"-label\").style = \"color: #dc3545; font-weight: 600\";\n}\n\n// Store curry list in local storage\nfunction store(lizt) {\n    localStorage.setItem('curryList', JSON.stringify(lizt))\n}\n\nfunction loadCurryList() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\nfunction loadMarkerInfo() {\n    let markersList = [];\n    if (!loaded_curryList) {\n        loaded_curryList = []\n    }\n    for (let i = 0; i < loaded_curryList.length; i++) {\n        let curry = loaded_curryList[i];\n\n        Geocode.fromAddress(curry.restaurantAddress).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                //   console.log(\"address: \", curry.restaurantAddress, \" \", lat, lng);\n                markersList.push(\n                    { latitude: lat, longitude: lng, name: curry.restaurantName }\n                );\n            },\n            error => {\n                \n                console.error(\"No location found for restaurant \", loaded_curryList[i].restaurantName, \" at \", loaded_curryList[i].restaurantAddress, \"\\nTechnical error for this to follow (just ignore):\\n\", error);\n            }\n        );\n    }\n    return markersList;\n}\n\n// Globals\nlet loaded_curryList = loadCurryList();\nlet loaded_markerInfo = loadMarkerInfo();\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curryList: loaded_curryList || [],\n            restaurants: loaded_markerInfo || [],\n            markerSelected: false,\n            modalShow: false,\n            pictures: []\n        }\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n            pictures: pictureDataURLs\n        });\n    }\n\n    displayMarkers = () => {\n        return this.state.restaurants.map((rest, index) => {\n            return <Marker\n                    key={rest.name + \"_\" + index}\n                    id={index}\n                    position={{\n                        lat: rest.latitude,\n                        lng: rest.longitude\n                    }}\n                    icon = {{url: \"http://maps.google.com/mapfiles/kml/pal2/icon41.png\"}}\n                    onClick={() => this.markerClicked(rest, index)} />\n        })\n    }\n\n    markerClicked(restInfo, index) {\n        this.setState({ markerSelected: true });\n\n        // open infowindow.open(map, marker);\n        document.getElementById(\"instrucs\").innerHTML = \"Selected restaurant: \";\n\n        // Set restaurant name\n        for (var i = 0; i < document.getElementsByClassName(\"rest-name\").length; i++) {\n            document.getElementsByClassName(\"rest-name\")[i].innerHTML = restInfo.name;\n        }\n        \n        // Set curry type\n        document.getElementById(\"curry-img\").src = this.state.curryList[index].pic;\n\n        document.getElementById(\"ranking\").innerHTML = \"#\" + (index + 1);\n\n        document.getElementById(\"curry-type\").innerHTML = this.state.curryList[index].curryType;\n\n        document.getElementById(\"taste-notes\").innerHTML = this.state.curryList[index].tastingNotes;\n\n        document.getElementById(\"rate\").innerHTML = this.state.curryList[index].curryRating;\n    }\n\n    setModalShow(bool) {\n        // on open, reset picture stored for upload so no repeats if someone doesn't upload one\n        if(bool === true){\n            this.setState({\n                pictures:[]\n            })\n        }\n        this.setState({ modalShow: bool });\n    }\n\n    addItem = (e) => {\n        e.preventDefault();\n        // Error checker: make sure all input values are filled (except excluded inputs if any)\n        let excludedInputs = \"tastingNotes\";\n        let error = false;\n        // Go through each input field and make sure it's not empty\n        for (var i = 0; i < 5; i++) {\n            if (e.target[i].value === \"\" && !excludedInputs.includes(e.target[i].name)) {\n                throwError(e.target[i].name);\n                error = true;\n            }\n            else if (document.getElementById(e.target[i].name + \"-label\").style.color !== \"#212529\") {\n                document.getElementById(e.target[i].name + \"-label\").style.color = \"#212529\";\n                document.getElementById(e.target[i].name + \"-label\").style.fontWeight = \"400\"\n            }\n        }\n        if (error === true) {\n            document.getElementsByClassName(\"req\")[0].style.color = \"#dc3545\";\n            return null\n        }\n\n        let currCurryList = this.state.curryList;\n\n        let newCurry = {};\n        for (i = 0; i < 5; i++) {\n            // If optional inputs empty, fill with \"None\"\n            if (excludedInputs.includes(e.target[i].name) && e.target[i].value === \"\") {\n                e.target[i].value = \"N/A\"\n            }\n\n            newCurry[e.target.elements[i].name] = e.target[i].value;\n        }\n        if(this.state.pictures.length === 0){\n            newCurry[\"pic\"] = curryBowl\n        }\n        else{\n            newCurry[\"pic\"] = this.state.pictures;\n        }\n\n        currCurryList.push(newCurry);\n        this.setState({ curryList: currCurryList });\n        store(currCurryList);\n\n        // close modal\n        this.setModalShow(false);\n\n        window.location.reload()\n    }\n\n    render() {\n        return (\n            <div id=\"bootstrap-overrides\">\n                <div id=\"selected-restaurant\">\n                    <span id=\"instrucs\">Select a Pinned Thai Curry Restaurant</span> <span className='rest-name'></span>\n                    <br />\n                    <span className=\"link-like-span\" onClick={() => this.setModalShow(true)}>\n                        + Add New Curry\n                    </span>\n                </div>\n\n                <AddCurryModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                    currySetter={this.addItem}\n                    onDrop ={this.onDrop}\n                />\n\n                <div id=\"map-box\">\n                    <Map\n                        google={this.props.google}\n                        zoom={13}\n                        style={mapStyles}\n                        initialCenter={{ lat: 40.4476, lng: -79.9809 }}\n                    >\n                        {this.displayMarkers()}\n                    </Map>\n                </div>\n\n                <div id=\"notice\">Note: if map doesn't update or show markers and curries in index, refresh page</div>\n\n                { this.state.markerSelected &&\n                    <div id=\"selected-curry\" className=\"mt-2 mt-md-2\">\n                        <Image alt=\"curry\" src={curryBowl} id=\"curry-img\" className=\"selected-curry-image left-fl mr-4\" />\n                        <div className=\"left-fl\">\n                            <span className=\"left-fl\">\n                                <span id=\"ranking\">#1</span>\n                            </span>\n\n                            <span className=\"left-fl ml-1 mt-3\">\n                                <h2 className=\"rest-name mb-0\">n</h2>\n                                <h3 id=\"curry-type\">Type</h3>\n                            </span>\n\n                            <div className=\"clear\">\n                                Taste notes: <span id=\"taste-notes\"></span>\n                                <br />\n                                Rating: <span id=\"rate\"></span>/5\n                            </div>\n                        </div>\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM' })(MapContainer);"]},"metadata":{},"sourceType":"module"}