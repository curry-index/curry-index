{"version":3,"sources":["Map.js","Nav.js","noodlehead-red.jpg","App.js","index.js"],"names":["Geocode","setApiKey","mapStyles","width","height","position","loaded_curryList","unparsedCurryList","localStorage","getItem","JSON","parse","loadCurryList","loaded_markerInfo","markersList","i","curry","fromAddress","restaurantAddress","then","response","results","geometry","location","lat","lng","push","latitude","longitude","name","restaurantName","error","console","length","loadMarkerInfo","MapContainer","props","displayMarkers","state","restaurants","map","rest","index","id","onClick","markerClicked","curryList","restInfo","document","getElementById","innerHTML","getElementsByClassName","google","this","zoom","style","initialCenter","Component","GoogleApiWrapper","apiKey","Nav","className","to","replace","AddCurryModal","Modal","show","size","backdrop","aria-labelledby","centered","Form","onSubmit","currySetter","Body","Label","Control","type","placeholder","as","rows","Footer","Button","variant","onHide","store","lizt","setItem","stringify","load","Curry","Image","alt","src","noodleheadRed","restaurant","tastingNotes","rating","e","deleteItem","React","App","addItem","preventDefault","inputName","excludedInputs","target","elements","value","includes","color","fontWeight","currCurryList","newCurry","setState","setModalShow","curryFalling","event","stopPropagation","splice","newCurryContent","modalShow","curryType","bool","curriesInIndex","renderCurryItem","curryRating","Routing","basename","exact","path","ReactDOM","render"],"mappings":"+TAWAA,IAAQC,UAAU,2CAElB,IAAMC,EAAY,CACdC,MAAO,MACPC,OAAQ,MACRC,SAAU,YAkCd,IAAIC,EA/BJ,WACI,IAAIC,EAAoBC,aAAaC,QAAQ,aAE7C,OAAQF,GAAqBG,KAAKC,MAAMJ,GA4BrBK,GACnBC,EA1BJ,WACI,IAAIC,EAAc,GACdR,IACAA,EAAmB,IAEvB,IALsB,eAKbS,GACL,IAAIC,EAAQV,EAAiBS,GAE7Bf,IAAQiB,YAAYD,EAAME,mBAAmBC,MACzC,SAAAC,GAAa,IAAD,EACaA,EAASC,QAAQ,GAAGC,SAASC,SAA1CC,EADA,EACAA,IAAKC,EADL,EACKA,IAEbX,EAAYY,KACR,CAAEC,SAAUH,EAAKI,UAAWH,EAAKI,KAAMb,EAAMc,oBAGrD,SAAAC,GACIC,QAAQD,MAAMA,OAZjBhB,EAAI,EAAGA,EAAIT,EAAiB2B,OAAQlB,IAAM,EAA1CA,GAgBT,OAAOD,EAKaoB,GAElBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,eAAiB,WACb,OAAO,EAAKC,MAAMC,YAAYC,KAAI,SAACC,EAAMC,GACrC,OAAO,cAAC,SAAD,CAAsCC,GAAID,EAAOrC,SAAU,CAC9DmB,IAAKiB,EAAKd,SACVF,IAAKgB,EAAKb,WAEVgB,QAAS,kBAAM,EAAKC,cAAcJ,KAJlBA,EAAKZ,KAAO,IAAMa,OAR1C,EAAKJ,MAAQ,CACTQ,UAAWxC,GAAoB,GAC/BiC,YAAa1B,GAAqB,IALvB,E,0DAmBLkC,GACVC,SAASC,eAAe,uBAAuBC,UAAU,2DAGzD,IAAI,IAAInC,EAAE,EAAGA,EAAIiC,SAASG,uBAAuB,aAAalB,OAAQlB,IAClEiC,SAASG,uBAAuB,aAAapC,GAAGmC,UAAYH,EAASlB,KAIzEmB,SAASC,eAAe,gB,+BAIxB,OACI,sBAAKN,GAAG,sBAAR,UACI,qBAAKA,GAAG,sBAAR,mDAGA,qBAAKA,GAAG,SAAR,SACI,cAAC,MAAD,CACIS,OAAQC,KAAKjB,MAAMgB,OACnBE,KAAM,GACNC,MAAOrD,EACPsD,cAAe,CAAEhC,IAAK,QAASC,KAAM,SAJzC,SAMK4B,KAAKhB,4B,GA7CHoB,aA0DZC,6BAAiB,CAAEC,OAAQ,2CAA3BD,CAAwEvB,GCtFxEyB,G,6KAdP,OACI,sBAAKjB,GAAG,YAAYkB,UAAU,mBAA9B,UACI,cAAC,IAAD,CAAMC,GAAG,IAAIC,SAAO,EAACF,UAAU,eAA/B,gCAEA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAASC,GAAG,IAAIC,SAAO,EAACF,UAAU,8BAAlC,yBAEA,cAAC,IAAD,CAASC,GAAG,OAAOC,SAAO,EAACF,UAAU,8BAArC,2B,GAVFJ,c,gCCRH,MAA0B,2CCqBzC,SAASO,EAAc5B,GACnB,OACI,cAAC6B,EAAA,EAAD,CAAOtB,GAAG,sBACNuB,KAAM9B,EAAM8B,KACZC,KAAK,KACLC,SAAS,SACTP,UAAU,kBACVQ,kBAAgB,gCAChBC,UAAQ,EANZ,SAQI,eAACC,EAAA,EAAD,CAAMC,SAAUpC,EAAMqC,YAAtB,UACI,eAACR,EAAA,EAAMS,KAAP,CAAYb,UAAU,kBAAtB,UACI,oBAAIA,UAAU,OAAd,6BACA,qBAAKA,UAAU,WAAf,8BACA,uBAGA,cAACU,EAAA,EAAKI,MAAN,CAAYhC,GAAG,uBAAuBkB,UAAU,OAAhD,yBAA+E,uBAC/E,cAACU,EAAA,EAAKK,QAAN,CAAcT,KAAK,KAAKtC,KAAK,iBAAiBgD,KAAK,OAAOC,YAAY,uBACtE,uBAEA,cAACP,EAAA,EAAKI,MAAN,CAAYhC,GAAG,0BAA0BkB,UAAU,OAAnD,yCACA,cAACU,EAAA,EAAKK,QAAN,CAAcT,KAAK,KAAKtC,KAAK,oBAAoBgD,KAAK,OAAOC,YAAY,uCACzE,uBAEA,qBAAKjB,UAAU,gBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAACU,EAAA,EAAKI,MAAN,CAAYhC,GAAG,kBAAkBkB,UAAU,OAA3C,yBACA,uBAAM,sBAAMA,UAAU,WAAhB,qCACN,cAACU,EAAA,EAAKK,QAAN,CAAcT,KAAK,KAAKtC,KAAK,YAAYgD,KAAK,OAAOC,YAAY,wBAErE,sBAAKjB,UAAU,QAAf,UACI,cAACU,EAAA,EAAKI,MAAN,CAAYhC,GAAG,oBAAoBkB,UAAU,OAA7C,qBACA,uBAAM,sBAAMA,UAAU,WAAhB,6BACN,cAACU,EAAA,EAAKK,QAAN,CAAcT,KAAK,KAAKtC,KAAK,cAAcgD,KAAK,OAAOC,YAAY,gBAK/E,uBACA,cAACP,EAAA,EAAKI,MAAN,CAAYhC,GAAG,qBAAqBkB,UAAU,OAA9C,yBACA,cAACU,EAAA,EAAKK,QAAN,CAAcG,GAAG,WAAWlD,KAAK,eAAeiD,YAAY,6BAA6BE,KAAM,OAYnG,eAACf,EAAA,EAAMgB,OAAP,WACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBhB,KAAK,KAAKvB,QAASR,EAAMgD,OAA7D,mBACA,cAACF,EAAA,EAAD,CAAQC,QAAQ,UAAUN,KAAK,SAASV,KAAK,KAA7C,0BAQpB,SAASkB,EAAMC,GACX9E,aAAa+E,QAAQ,YAAa7E,KAAK8E,UAAUF,IAWrD,IAAIhF,EAPJ,WACI,IAAIC,EAAoBC,aAAaC,QAAQ,aAE7C,OAAQF,GAAqBG,KAAKC,MAAMJ,GAIrBkF,GAEjBC,E,uKACQ,IAAD,OACL,OACI,qBAAK7B,UAAU,0BAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,2BAAf,SAEI,cAAC8B,EAAA,EAAD,CAAOC,IAAI,QAAQC,IAAKC,EAAejC,UAAU,kBAErD,sBAAKA,UAAU,2BAAf,UACI,oBAAIA,UAAU,qCAAd,SAAoDR,KAAKjB,MAAM2D,aAC/D,6BAAK1C,KAAKjB,MAAMpB,QAChB,8CACkBqC,KAAKjB,MAAM4D,aACzB,uBAFJ,WAEmB3C,KAAKjB,MAAM6D,OAF9B,QAKA,sBAAMpC,UAAU,aAAajB,QAAS,SAACsD,GAAD,OAAO,EAAK9D,MAAM+D,WAAWD,EAAG,EAAK9D,MAAMrB,IAAjF,kC,GAlBRqF,IAAM3C,WA6JX4C,E,kDA9HX,WAAYjE,GAAQ,IAAD,8BACf,cAAMA,IAcVkE,QAAU,SAACJ,GACPA,EAAEK,iBAMF,IAJA,IAnIYC,EAmIRC,EAAiB,eAEjB1E,GAAQ,EAEHhB,EAAI,EAAGA,EAAImF,EAAEQ,OAAOC,SAAS1E,OAAS,EAAGlB,IACpB,KAAtBmF,EAAEQ,OAAO3F,GAAG6F,MACPH,EAAeI,SAASX,EAAEQ,OAAO3F,GAAGc,MAIhC4E,EAAeI,SAASX,EAAEQ,OAAO3F,GAAGc,QACzCqE,EAAEQ,OAAO3F,GAAG6F,MAAQ,SA9IpBJ,EA0IWN,EAAEQ,OAAO3F,GAAGc,KAzIvCmB,SAASC,eAAeuD,EAAY,UAAUjD,MAAQ,mCA0ItCxB,GAAQ,GAM8D,YAArEiB,SAASC,eAAeiD,EAAEQ,OAAO3F,GAAGc,KAAO,UAAU0B,MAAMuD,QAChE9D,SAASC,eAAeiD,EAAEQ,OAAO3F,GAAGc,KAAO,UAAU0B,MAAMuD,MAAQ,UACnE9D,SAASC,eAAeiD,EAAEQ,OAAO3F,GAAGc,KAAO,UAAU0B,MAAMwD,WAAa,OAGhF,IAAc,IAAVhF,EACA,OAAO,KAGX,IAAIiF,EAAgB,EAAK1E,MAAMQ,UAE3BmE,EAAW,GACf,IAAKlG,EAAI,EAAGA,EAAImF,EAAEQ,OAAOC,SAAS1E,OAAS,EAAGlB,IAC1CkG,EAASf,EAAEQ,OAAOC,SAAS5F,GAAGc,MAAQqE,EAAEQ,OAAO3F,GAAG6F,MAGtDI,EAActF,KAAKuF,GACnB,EAAKC,SAAS,CAAEpE,UAAWkE,IAC3B3B,EAAM2B,GAGN,EAAKG,cAAa,GAGlB,EAAKD,SAAS,CAAEE,cAAc,KAxDf,EA2DnBjB,WAAa,SAACkB,EAAOtG,GACjBsG,EAAMC,kBACN,IAAIN,EAAgB,EAAK1E,MAAMQ,UAC/BkE,EAAcO,OAAOxG,EAAG,GACxB,EAAKmG,SAAS,CAAEpE,UAAWkE,IAC3B3B,EAAM2B,IA9DN,EAAK1E,MAAQ,CAETQ,UAAWxC,GAAoB,GAC/BkH,gBAAiB,GACjBC,WAAW,EACXL,cAAc,GAPH,E,4DAWHrB,EAAY2B,EAAW1B,EAAcC,EAAQlF,GACzD,OAAO,cAAC,EAAD,CAAOgF,WAAYA,EAAY/E,MAAO0G,EAAW1B,aAAcA,EAAcC,OAAQA,EAAQlF,EAAGA,EAAWoF,WAAY9C,KAAK8C,YAApBpF,K,mCAuDtG4G,GACTtE,KAAK6D,SAAS,CAAEO,UAAWE,M,+BAGrB,IAAD,OACDC,EAAiB,GACrB,GAA6B,OAAzBvE,KAAKf,MAAMQ,UACX,IAAK,IAAI/B,EAAI,EAAGA,EAAIsC,KAAKf,MAAMQ,UAAUb,OAAQlB,IAAK,CAClD,IAAIC,EAAQqC,KAAKf,MAAMQ,UAAU/B,GACjC6G,EAAelG,KACX2B,KAAKwE,gBACD7G,EAAMc,eACNd,EAAM0G,UACN1G,EAAMgF,aACNhF,EAAM8G,YACN/G,IAMhB,OACI,sBAAK4B,GAAG,sBAAR,UACMU,KAAKf,MAAM8E,cACT,uBAAMvD,UAAU,0BAAhB,UACI,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,qBAIxB,sBAAKA,UAAU,sBAAf,UACI,oBAAIA,UAAU,OAAd,2BACA,sBAAMA,UAAU,iBAAiBjB,QAAS,kBAAM,EAAKuE,cAAa,IAAlE,SACI,qDAIR,qBAAKtD,UAAU,MAAf,SACK+D,IAEL,cAAC5D,EAAD,CACIE,KAAMb,KAAKf,MAAMmF,UACjBrC,OAAQ,kBAAM,EAAK+B,cAAa,IAChC1C,YAAapB,KAAKiD,iB,GAxHpB7C,aCnHZsE,E,uKAEE,OACQ,qBAAKlE,UAAU,YAAf,SACI,eAAC,IAAD,CAAYmE,SAAS,IAArB,UACI,cAAC,EAAD,IAGA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACI,cAAC,EAAD,kB,GAdVzE,aA0BtB0E,IAASC,OAAO,cAAC,EAAD,IAAapF,SAASC,eAAe,W","file":"static/js/main.fed8b833.chunk.js","sourcesContent":["// HOW TO USE MAPS API: https://dev.to/jessicabetts/how-to-use-google-maps-api-and-react-js-26c2\n\n// Modules\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\n\n// CSS\nimport './Map.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nGeocode.setApiKey('AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM');\n\nconst mapStyles = {\n    width: '80%',\n    height: '60%',\n    position: 'relative'\n};\n\nfunction loadCurryList() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\nfunction loadMarkerInfo() {\n    let markersList = [];\n    if(!loaded_curryList){\n        loaded_curryList = []\n    }\n    for (let i = 0; i < loaded_curryList.length; i++) {\n        let curry = loaded_curryList[i];\n\n        Geocode.fromAddress(curry.restaurantAddress).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                //   console.log(\"address: \", curry.restaurantAddress, \" \", lat, lng);\n                markersList.push(\n                    { latitude: lat, longitude: lng, name: curry.restaurantName }\n                );\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n    return markersList;\n}\n\n// Globals\nlet loaded_curryList = loadCurryList();\nlet loaded_markerInfo = loadMarkerInfo();\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curryList: loaded_curryList || [],\n            restaurants: loaded_markerInfo || []\n        }\n    }\n\n    displayMarkers = () => {\n        return this.state.restaurants.map((rest, index) => {\n            return <Marker key={rest.name + \"_\" + index} id={index} position={{\n                lat: rest.latitude,\n                lng: rest.longitude\n            }}\n                onClick={() => this.markerClicked(rest)} />\n        })\n    }\n\n    markerClicked(restInfo) {\n        document.getElementById(\"selected-restaurant\").innerHTML=\"Selected restaurant: <span className='rest-name'></span>\";\n        \n        // Set restaurant name\n        for(var i=0; i < document.getElementsByClassName(\"rest-name\").length; i++){\n            document.getElementsByClassName(\"rest-name\")[i].innerHTML = restInfo.name;\n        }\n\n        // Set curry type\n        document.getElementById(\"curry-type\")\n    }\n\n    render() {\n        return (\n            <div id=\"bootstrap-overrides\">\n                <div id=\"selected-restaurant\">\n                    Select a Pinned Thai Curry Restaurant</div>\n\n                <div id=\"mapBox\">\n                    <Map\n                        google={this.props.google}\n                        zoom={13}\n                        style={mapStyles}\n                        initialCenter={{ lat: 40.4406, lng: -79.9959 }}\n                    >\n                        {this.displayMarkers()}\n                    </Map>\n                </div>\n                {/* <div id=\"selected-curry\" className=\"mt-2 mt-md-2\"> */}\n                    {/* <h2 className=\"rest-name\"></h2> */}\n                    {/* <h3 id=\"curry-type\"></h3> */}\n                {/* </div> */}\n\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyAYZ0l37RYVyu6rfb-K6WEP1tbFrPfJmKM' })(MapContainer);","import React, { Component } from \"react\";\nimport './Nav.css';\nimport {\n    NavLink,\n    Link\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Nav extends Component {\n\n    render() {\n        return (\n            <nav id=\"overrides\" className=\"navbar mb-5 px-0\">\n                <Link to=\"/\" replace className=\"navbar-brand\">Custom Curry Index</Link>\n\n                <div className=\"navbar-nav flex-row\">\n                    <NavLink to=\"/\" replace className=\"nav-item nav-link px-1 mr-2\">Curry Index</NavLink>\n\n                    <NavLink to=\"/map\" replace className=\"nav-item nav-link px-1 mx-2\">Map</NavLink>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Nav;","export default __webpack_public_path__ + \"static/media/noodlehead-red.9cb1acaf.jpg\";","// Questions\n// Making images work in react by src link without import?\n//    - need this to add custom images\n// Make maps update without manual refresh?\n\n// Modules\nimport React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport noodleheadRed from './noodlehead-red.jpg';\n\n// CSS\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction throwError(inputName) {\n    document.getElementById(inputName + \"-label\").style = \"color: #dc3545; font-weight: 600\";\n}\n\nfunction AddCurryModal(props) {\n    return (\n        <Modal id=\"bootstrap-overrides\"\n            show={props.show}\n            size=\"md\"\n            backdrop=\"static\"\n            className=\"modal-add-curry\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Form onSubmit={props.currySetter}>\n                <Modal.Body className=\"container-fluid\">\n                    <h2 className=\"mb-1\">New Curry Entry</h2>\n                    <div className=\"sublabel\">* Required field</div>\n                    <br />\n                    {/* <div className=\"row\"> */}\n                    {/* <div className=\"col-8\"> */}\n                    <Form.Label id=\"restaurantName-label\" className=\"mb-1\">Restaurant*</Form.Label><br />\n                    <Form.Control size=\"sm\" name=\"restaurantName\" type=\"text\" placeholder=\"Name of Restaurant\" />\n                    <br />\n\n                    <Form.Label id=\"restaurantAddress-label\" className=\"mb-1\">Full Address of Restaurant*</Form.Label>\n                    <Form.Control size=\"sm\" name=\"restaurantAddress\" type=\"text\" placeholder='e.g. \"123 Thai St, Pittsburgh, PA\"' />\n                    <br />\n\n                    <div className=\"container p-0\">\n                        <div className=\"row\">\n                            <div className=\"col-8\">\n                                <Form.Label id=\"curryType-label\" className=\"mb-0\">Curry Name*</Form.Label>\n                                <br /><span className=\"sublabel\">Include \"curry\" in name</span>\n                                <Form.Control size=\"sm\" name=\"curryType\" type=\"text\" placeholder='e.g. \"Red Curry\"' />\n                            </div>\n                            <div className=\"col-4\">\n                                <Form.Label id=\"curryRating-label\" className=\"mb-0\">Rating*</Form.Label>\n                                <br /><span className=\"sublabel\">1=worst, 5=best</span>\n                                <Form.Control size=\"sm\" name=\"curryRating\" type=\"text\" placeholder=\"1-5\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <br />\n                    <Form.Label id=\"tastingNotes-label\" className=\"mb-1\">Taste Notes</Form.Label>\n                    <Form.Control as=\"textarea\" name=\"tastingNotes\" placeholder=\"Taste description of curry\" rows={3} />\n\n                    {/* </div> */}\n\n                    {/* <div className=\"col-4\">\n                            <Form.Group>\n                                <Form.Label className=\"mb-1\">Add a Photo</Form.Label>\n                                <Form.File name=\"curryPhoto\" id=\"exampleFormControlFile1\" />\n                            </Form.Group>\n                        </div> */}\n                    {/* </div> */}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={props.onHide}>Close</Button>\n                    <Button variant=\"primary\" type=\"submit\" size=\"sm\">Save</Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n}\n\n// Store curry list in local storage\nfunction store(lizt) {\n    localStorage.setItem('curryList', JSON.stringify(lizt))\n}\n\n// Load from storage\nfunction load() {\n    let unparsedCurryList = localStorage.getItem('curryList')\n    //Using && to condition on unparsedCurryList else null\n    return (unparsedCurryList && JSON.parse(unparsedCurryList))\n}\n\n// Globals\nlet loaded_curryList = load();\n\nclass Curry extends React.Component {\n    render() {\n        return (\n            <div className=\"col-sm-12 col-md-6 mb-4\">\n                <div className=\"mt-4 mt-sm-auto\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-7 col-lg-6\">\n                            {/* <Image alt=\"curry\" src={require(\"./noodlehead-red.jpg\")} /> */}\n                            <Image alt=\"curry\" src={noodleheadRed} className=\"card-images\" />\n                        </div>\n                        <div className=\"col-12 col-md-5 col-lg-6\">\n                            <h2 className=\"mb-0 mt-2 mt-md-0 curry-card-title\">{this.props.restaurant}</h2>\n                            <h3>{this.props.curry}</h3>\n                            <p>\n                                Taste notes: {this.props.tastingNotes}\n                                <br />Rating: {this.props.rating}/5\n                            </p>\n\n                            <span className=\"delete-btn\" onClick={(e) => this.props.deleteItem(e, this.props.i)}>\n                                {/* <span onClick={() => deleteCurry()} className=\"delete-btn\"> */}\n                                Delete\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //Using || for backup assignment if no curryList in storage\n            curryList: loaded_curryList || [],\n            newCurryContent: \"\",\n            modalShow: false,\n            curryFalling: false,\n        };\n    }\n\n    renderCurryItem(restaurant, curryType, tastingNotes, rating, i) {\n        return <Curry restaurant={restaurant} curry={curryType} tastingNotes={tastingNotes} rating={rating} i={i} key={i} deleteItem={this.deleteItem} />;\n    }\n\n    addItem = (e) => {\n        e.preventDefault();\n        // Error checker: make sure all input values are filled (except excluded inputs if any)\n        let excludedInputs = \"tastingNotes\";\n\n        let error = false;\n        // Go through each input field and make sure it's not empty\n        for (var i = 0; i < e.target.elements.length - 2; i++) {\n            if (e.target[i].value === \"\") {\n                if (!excludedInputs.includes(e.target[i].name)) {\n                    throwError(e.target[i].name);\n                    error = true;\n                }\n                else if (excludedInputs.includes(e.target[i].name)) {\n                    e.target[i].value = \"None\"\n                }\n            }\n            else if (document.getElementById(e.target[i].name + \"-label\").style.color !== \"#212529\") {\n                document.getElementById(e.target[i].name + \"-label\").style.color = \"#212529\";\n                document.getElementById(e.target[i].name + \"-label\").style.fontWeight = \"400\"\n            }\n        }\n        if (error === true) {\n            return null\n        }\n\n        let currCurryList = this.state.curryList;\n\n        let newCurry = {};\n        for (i = 0; i < e.target.elements.length - 2; i++) {\n            newCurry[e.target.elements[i].name] = e.target[i].value;\n        }\n\n        currCurryList.push(newCurry)\n        this.setState({ curryList: currCurryList });\n        store(currCurryList)\n\n        // close modal\n        this.setModalShow(false);\n\n        // Start animation: Falling curry bowls\n        this.setState({ curryFalling: true });\n    };\n\n    deleteItem = (event, i) => {\n        event.stopPropagation(); // Makes the delete button work\n        let currCurryList = this.state.curryList;\n        currCurryList.splice(i, 1);\n        this.setState({ curryList: currCurryList });\n        store(currCurryList);\n    };\n\n    setModalShow(bool) {\n        this.setState({ modalShow: bool });\n    }\n\n    render() {\n        let curriesInIndex = [];\n        if (this.state.curryList !== null) {\n            for (let i = 0; i < this.state.curryList.length; i++) {\n                let curry = this.state.curryList[i];\n                curriesInIndex.push(\n                    this.renderCurryItem(\n                        curry.restaurantName,\n                        curry.curryType,\n                        curry.tastingNotes,\n                        curry.curryRating,\n                        i\n                    )\n                );\n            }\n        }\n\n        return (\n            <div id=\"bootstrap-overrides\">\n                { this.state.curryFalling &&\n                    <span className=\"falling-curry container\">\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                        <span className=\"fallingLeaves\"></span>\n                    </span>\n                }\n                {/* Curry Index: List of curries */}\n                <div className=\"header pb-0 pb-md-3\">\n                    <h1 className=\"mb-0\">Saved Curries</h1>\n                    <span className=\"link-like-span\" onClick={() => this.setModalShow(true)}>\n                        <u>+ Add New Curry</u>\n                    </span>\n                </div>\n\n                <div className=\"row\">\n                    {curriesInIndex}\n                </div>\n                <AddCurryModal\n                    show={this.state.modalShow}\n                    onHide={() => this.setModalShow(false)}\n                    currySetter={this.addItem}\n                />\n            </div >\n        );\n    }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n    // BrowserRouter as Router,\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\nimport MapContainer from \"./Map\";\nimport Nav from \"./Nav\";\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Routing extends Component {\n    render() {\n        return (\n                <div className=\"container\">\n                    <HashRouter basename='/'>\n                        <Nav />\n\n                        {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <App />\n                            </Route>\n\n                            <Route path=\"/map\">\n                                <MapContainer />\n                            </Route>\n                        </Switch>\n                    </HashRouter>\n                </div>\n        )\n    }\n}\n\n// const Home = () => <div><h2>Home</h2></div>\n// const About = () => <div><h2>About</h2></div>\n\nReactDOM.render(<Routing />, document.getElementById('root'));"],"sourceRoot":""}